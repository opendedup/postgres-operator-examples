kubectl config use-context  gke_spanner-repltest_us-central1-c_store0
kubectl delete -f alloydb/alloydb-store-sec-services.yaml -n pgsql
kubectl apply -f alloydb/alloydb-store-services.yaml -n pgsql
kubectl apply -f alloydb/alloydb-store-config.yaml -n pgsql

kubectl apply -f alloydb/alloydb-store-deploy.yaml -n pgsql
kubectl get po -n pgsql
kubectl exec -it alloydb-0 -n pgsql -- bash
psql -U alloydbadmin -h localhost
kubectl apply  -f alloydb/alloydb-store-keycloak.yaml -n pgsql
kubectl get po -n pgsql
kubectl port-forward mongo-75f59d57f4-4nd6q :8080
kubectl get po -n pgsql

kubectl config get-contexts
kubectl config use-context gke_spanner-repltest_us-central1-f_cloudgke
kubectl apply -f alloydb/alloydb-cloud-deploy.yaml  -n store0
kubectl get po -n store0
kubectl exec -it alloydb-0 -n store0 -- bash
psql -U alloydbadmin -h localhost
\c clusterdb
\dt
select * from user_entity;
#add another user
select * from user_entity;

### Failover
kubectl config use-context gke_spanner-repltest_us-central1-c_store0
kubectl scale statefulsets alloydb --replicas=0 -n pgsql
#refresh web page
kubectl apply -f alloydb/alloydb-store-sec-services.yaml -n pgsql
kubectl config use-context gke_spanner-repltest_us-central1-f_cloudgke
kubectl exec -it alloydb-0 -n store0 -- bash
pg_ctl promote -D /mnt/disks/pgsql/data/
psql -U alloydbadmin -h localhost -C select * "from pg_create_physical_replication_slot('standby1',true);"
# add another user
kubectl config use-context gke_spanner-repltest_us-central1-c_store0
kubectl exec -it alloydb-0 -n pgsql -- bash
cd /mnt/disks/pgsql/data/
touch standby.signal

